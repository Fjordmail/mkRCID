#!/bin/sh
set -e      # Abort upon error
#set -x     # Print every command

#######################################
#   Description:
#       Create new identity in Roundcube
#   Usage:
#       ./mkRCID user_name new_alias
#   Arguments:
#        user_name (string): user's main address
#        new_alias (string): user's new alias
#   Returns:
#       0 upon success
#       >=1 upon error
#######################################
main() {
    # Check if $USAGE is respected
    readonly USAGE='Usage: ./mkRCID user_name new_alias'
    [ "$#" -lt 1 ] && err "Error: 2 argument(s) expected, $# received" && err "$USAGE" && return 1
    [ ! -f .env ] && err "Error: could not find .env file" && return 2

     # Load .env
    set -a; . ./.env; set +a

    # Parameters
    readonly user_name="$1"
    readonly new_alias="$2"

    # Check if identity already exists
    check_duplicates

    # Display existing identities
    readonly user_id="$(get_user_id "$user_name")"
	show_IDs

    # Create the RCID, if alias is provided
	[ ! -z "$new_alias" ] && insert_new
}

#######################################
#   Check in identities if the alias is already there
#######################################
check_duplicates() {
	# Check if identity already exists
	readonly check_identity="$( \
		mysql --skip-column-names \
			--user="$CONFIG_USER" --password="$CONFIG_PASSWORD" --database="$CONFIG_DATABASE" \
			--execute="SELECT * FROM identities WHERE email='$new_alias'" \
	)"

    [ ! -z "$check_identity" ] \
		&& err "Error: identity with alias '$new_alias' already exists" \
        && return 3 \
		|| return 0
}

#######################################
#	Fetch user_id from users
#######################################
get_user_id() {
	readonly user_id="$( \
		mysql --skip-column-names \
			--user="$CONFIG_USER" --password="$CONFIG_PASSWORD" --database="$CONFIG_DATABASE" \
			--execute="SELECT user_id FROM users WHERE username='$user_name'" \
	)"

    [ -z "$user_id" ] \
        && err "Error: user '$user_name' not found" \
        && return 4

	echo "$user_id"
}

#######################################
#	Display existing IDs
#######################################
show_IDs() {
	mysql --user="$CONFIG_USER" --password="$CONFIG_PASSWORD" --database="$CONFIG_DATABASE" \
		--execute="SELECT standard, email FROM identities WHERE user_id='$user_id'"
}

#######################################
#	Insert new ID
#######################################
insert_new() {
	warn "Found the above existing identities. Proceed and create '$new_alias'?"

	# Create new identity
	printf "\nAdding new identity...\n"

	mysql --user="$CONFIG_USER" --password="$CONFIG_PASSWORD" --database="$CONFIG_DATABASE" \
		--execute="\
			INSERT INTO \
				\`identities\` (\`identity_id\`, \`user_id\`, \`changed\`, \`del\`, \`standard\`, \`name\`, \`organization\`, \`email\`, \`reply-to\`, \`bcc\`, \`signature\`, \`html_signature\`) \
			VALUES (NULL, '$user_id', NOW(), 0, 0, '', '', '$new_alias', '', '', NULL, 0) \
		"
}

#######################################
#	Warn user and ask for confirmation
#######################################
warn() {
	printf "\n%s\n" "$*"
	read -p "Press any key to continue or ^C to abort." key
}

#######################################
#   Print error message to stderr
#   https://google.github.io/styleguide/shellguide.html
#######################################
err() { echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >&2; }

main "$@"; exit

